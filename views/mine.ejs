<!DOCTYPE html>
<html lang="en">
  <head>
    <script src="//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>내 정보</title>
    <style>
      * {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
      }

      body {
        margin-top: 100px;
        font-family: "Arial", sans-serif;
        background-color: rgb(255 255 255 / var(--tw-bg-opacity));
        padding: 20px;
        display: flex;
        justify-content: center;
        align-items: center;
      }

      .main {
        width: 80%;
        background-color: white;
        text-align: center;
        padding-left: 60px;
      }
      .sub {
        width: 20%;
        padding-left: 70px;
        border-right: 1px solid black;
        padding-right: -50px;
      }

      .container {
        padding-top: 20px;
        width: 100%;
        border-radius: 8px;
      }
      .text {
        width: 100%;
        font-size: 1rem;
        color: #555;
        margin-bottom: 30px;
        text-align: left;
        align-items: center;
      }
      .input_text {
        width: 100%;
        font-size: 1rem;
        color: #555;
        margin-bottom: 30px;
        text-align: left;
        align-items: center;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        font-size: 16px;
        outline: none;
      }
      .inputDiv {
        width: 20%;
        text-align: left;
      }
      .changePw {
        display: flex;
        flex-direction: column;
        align-items: center;
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: white;
        padding: 20px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
        border-radius: 8px;
        text-align: center;
        width: 300px;
        aspect-ratio: 1/0.7;
        transition: all 0.3s ease;
      }

      .overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        display: none;
      }

      .close-btn {
        position: absolute;
        top: 10px;
        right: 10px;
        background: none;
        border: none;
        font-size: 18px;
        cursor: pointer;
        color: #333;
      }

      .pw-container {
        gap: 20px;
        display: flex;
        flex-direction: column;
        width: 100%;
      }

      input {
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 5px;
        margin-top: 5px;
        width: 100%;
        font-size: 14px;
      }

      .btn:disabled {
        background-color: #ccc;
        cursor: not-allowed;
      }

      .none {
        display: none !important;
      }

      .text1 {
        color: red;
        font-size: 12px;
        margin-top: 5px;
      }

      .changePwBtn {
        text-align: left;
        background-color: lightgray;
        color: white;
        padding: 8px 16px;
        border: none;
        cursor: pointer;
        font-weight: bold;
        border-radius: 5px;
        transition: background 0.3s ease;
        text-align: center;
        font-size: 14px;
      }

      .changePwBtn:hover {
        background-color: gray;
      }
      .changeAddress {
        display: flex;
        flex-direction: column;
        align-items: center;
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: white;
        padding: 20px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
        border-radius: 8px;
        text-align: center;
        width: 400px;
        aspect-ratio: 1/0.9;
        transition: all 0.3s ease;
      }
      .look {
        margin-top: -10px;
      }
      .text2 {
        width: 100%;
        display: flex;
        align-items: center;
      }
      .edit {
        position: relative;
        right: -5px;
      }
      .maincontainer {
        display: flex;
      }
      .box {
        width: 100%;
        display: flex;
        justify-content: center;
        overflow: hidden;
      }
      .text_xl {
        font-size: 1.5rem;
        line-height: 2rem;
        font-weight: bold;
      }
      .text_box {
        display: flex;
        flex-direction: column;
      }
      .left {
        text-align: left;
      }
      .margin_top_btm {
        margin-top: 10px;
        margin-bottom: 10px;
      }
      .text_L {
        margin-bottom: 10px;
        font-weight: 700;
        text-align: left;
      }
      .btnDiv2 {
        display: flex;
        justify-content: flex-start;
      }
      .exit-btn {
        background-color: #f8f9fa; /* 연한 회색 배경 */
        border: 1px solid #dee2e6; /* 테두리 색 */
        border-radius: 8px; /* 둥근 모서리 */
        padding: 8px 16px; /* 내부 여백 */
        font-size: 14px; /* 글자 크기 */
        color: #212529; /* 글자 색 */
        cursor: pointer; /* 마우스 오버 시 포인터 */
        transition: background-color 0.3s ease-in-out, box-shadow 0.2s;
      }

      .exit-btn:hover {
        background-color: #e9ecef; /* 마우스 오버 시 색 변경 */
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15); /* 살짝 그림자 */
      }
    </style>
  </head>
  <body>
    <div class="box">
      <div class="sub">
        <div class="text_box">
          <div class="text_xl">마이 페이지</div>
          <div>
            <div class="margin_top_btm" onclick="myPost()">
              내가 작성한 게시글
            </div>
            <div onclick="heartMove()">내가 좋아한 게시글</div>
          </div>
        </div>
      </div>
      <div class="main">
        <div class="text_xl left">내 정보</div>
      </div>
    </div>

    <!-- ✅ 배경 오버레이 추가 -->
    <div class="overlay none" onclick="closeModal(1)"></div>

    <!-- ✅ 비밀번호 변경 모달 -->
    <div class="changePw none">
      <button class="close-btn" onclick="closeModal(1)">✖</button>
      <div class="pw-container">
        <div>새 비밀번호</div>
        <input type="password" id="password" placeholder="새 비밀번호" />
        <div class="text1"></div>
        <div>새 비밀번호 확인</div>
        <input type="password" id="checkPw" placeholder="새 비밀번호 확인" />
        <div class="text"></div>
        <div class="btnDiv"></div>
      </div>
    </div>

    <!-- ✅ 주소 변경 모달 -->
    <div class="changeAddress none">
      <button class="close-btn" onclick="closeModal(2)">✖</button>
      <div class="pw-container">
        <div>주소 찾기</div>
        <input type="text" id="postcode" placeholder="우편번호" required />
        <button class="exit-btn" onclick="execDaumPostcode()">
          우편번호 찾기
        </button>

        <input type="text" id="address" placeholder="주소" />

        <input type="text" id="detailAddress" placeholder="상세주소" />

        <input type="text" id="extraAddress" placeholder="참고항목" />

        <button class="exit-btn" onclick="updateAddress()">저장</button>
      </div>
    </div>

    <script>
      const addressMove = () => {
        window.location.href = "/address";
      };
      const heartMove = () => {
        window.location.href = "/myheart";
      };

      let main = document.querySelector(".main");
      let modal = document.querySelector(".changePw");
      let modal2 = document.querySelector(".changeAddress");
      let overlay = document.querySelector(".overlay");
      const password = document.getElementById("password");
      const checkPw = document.getElementById("checkPw");
      let userId = "";
      const myData = () => {
        let cookies = document.cookie.split(";");

        const tokenCookie = cookies.find((item) =>
          item.trim().startsWith("token=")
        );
        if (!tokenCookie) {
          main.innerHTML = `로그인 후 이용가능합니다`;
          return;
        }

        if (tokenCookie) {
          const token = tokenCookie.split("token=")[1];

          axios({
            method: "post",
            url: "/user/token",
            headers: {
              Authorization: `Bearer ${token}`,
            },
          }).then((res) => {
            let user = res.data.user;
            userId = user.id;
            let addressHTML =
              user.address && user.address.trim() !== ""
                ? `<div class='text2'><div>주소 : ${user.address} </div><div> <button class='exit-btn edit' onclick="changePw(2)">수정</button> </div></div>`
                : `<div class='text2'><div>주소 :</div> <div><button class='exit-btn edit' onclick="changePw(2)">주소 등록</button></div> </div>`;

            if (user.loginType === "local") {
              main.innerHTML += `
           <div class='container'>
                 <div class='text_L'>email(ID)</div>
               <div class="inputDiv">
               <input type="text" value="${user.email}" class='input_text' readonly>
              </div>
               <div class='text_L'>비밀번호</div>
           
               <div class='btnDiv2'> <button class="exit-btn " onclick="changePw(1)">
                  변경하기
                </button></div>
              <br>
              <div class='text_L'>전화번호</div>
              <div class="inputDiv">
               <input type="text" value="${user.number}" class='input_text' readonly>
              </div>
              <div class='text_L'>이름</div>
              <div class="inputDiv">
               <input type="text" value="${user.name}" class='input_text' readonly>
              </div>
               <div class='text_L'>주소</div>
               <div class='text'> ${addressHTML}</div> 
               <div class='text_L'>탈퇴하기</div>
                <div class="btnDiv2">
            <button class="exit-btn" onclick="exit(${user.id})">
                 탈퇴하기
             </button>
              </div>
              </div>;
            `;

              document.querySelector(
                ".btnDiv"
              ).innerHTML = `<button onclick="changeNewPw(${user.id})" class="btn" id="changePwBtn" disabled>
              비밀번호 변경
            </button>`;
            } else if (user.loginType === "naver") {
              main.innerHTML += `<div class='container'>
                 <div class='text_L'>email(ID)</div>
              <div class="inputDiv">
               <input type="text" value="${user.email}" class='input_text' readonly>
              </div>
              <div class='text_L'>전화번호</div>
              <div class="inputDiv">
               <input type="text" value="${user.number}" class='input_text' readonly>
              </div>
              <div class='text_L'>이름</div>
              <div class="inputDiv">
               <input type="text" value="${user.name}" class='input_text' readonly>
              </div>
              <div class='text_L'>주소</div>
               <div class='text'> ${addressHTML}</div> 
               <div class='text_L'>탈퇴하기</div>
              <div class="btnDiv2">
            <button class="exit-btn" onclick="exit(${user.id})">
                 탈퇴하기
             </button>
                </div>

            `;
            }
          });
        }
      };
      myData();
      //탈퇴
      const exit = (id) => {
        if (confirm("정말 탈퇴하시겠습니까?")) {
          axios({
            method: "delete",
            url: "/user/del",
            data: { id },
          }).then((res) => {
            if (res.data.message) {
              document.cookie = "token=; max-age=0; path=/";
              window.location.href = "/";
            }
          });
        }
      };
      // ✅ 모달 열기
      const changePw = (id) => {
        if (id === 1) {
          modal.classList.remove("none");
          overlay.classList.remove("none");
        }
        if (id === 2) {
          modal2.classList.remove("none");
          overlay.classList.remove("none");
        }
      };

      // ✅ 모달 닫기
      const closeModal = (id) => {
        if (id === 1) {
          modal.classList.add("none");
          overlay.classList.add("none");
        }
        if (id === 2) {
          modal2.classList.add("none");
          overlay.classList.add("none");
        }
      };

      const updatePw = () => {
        const pwValue = password.value;
        const checkValue = checkPw.value;
        const btn = document.getElementById("changePwBtn");

        const passRegex =
          /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%^&*()_+={}\[\]:;"'.,<>?/-]).{8,}$/;

        if (pwValue === "") {
          document.querySelector(".text1").innerHTML =
            "비밀번호를 입력해 주세요.";
        } else if (!passRegex.test(pwValue)) {
          document.querySelector(".text1").innerHTML =
            "비밀번호는 최소 8자 이상, 대소문자, 숫자, 특수문자를 포함해야 합니다.";
        } else {
          document.querySelector(".text1").innerHTML = "";
        }

        if (pwValue !== checkValue) {
          document.querySelector(".text").innerHTML =
            "비밀번호와 똑같이 입력하세요";
        } else {
          document.querySelector(".text").innerHTML = "";
        }

        if (
          pwValue &&
          checkValue &&
          passRegex.test(pwValue) &&
          pwValue === checkValue
        ) {
          btn.disabled = false;
        } else {
          btn.disabled = true;
        }
      };

      password.addEventListener("input", updatePw);
      checkPw.addEventListener("input", updatePw);

      const changeNewPw = (id) => {
        const pwValue = password.value;
        axios({
          method: "post",
          url: "/user/updatePw",
          data: { pw: pwValue, id: id },
        }).then((res) => {
          alert("비밀번호 변경 완료");
          window.location.reload();
        });
      };

      const myPost = () => {
        window.location.href = "/myPost";
      };
      const updateAddress = () => {
        const address = document.querySelector("#address").value; // 주소
        const detailAddress = document.querySelector("#detailAddress").value; // 상세주소
        const data = {
          address: address + " " + detailAddress,
        };
        axios({
          method: "post",
          url: "/user/updateAdress",
          data: { id: userId, address: address },
        }).then((res) => {
          window.location.reload();
        });
      };
      execDaumPostcode = () => {
        new daum.Postcode({
          oncomplete: function (data) {
            // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.

            // 각 주소의 노출 규칙에 따라 주소를 조합한다.
            // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.
            var addr = ""; // 주소 변수
            var extraAddr = ""; // 참고항목 변수

            //사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.
            if (data.userSelectedType === "R") {
              // 사용자가 도로명 주소를 선택했을 경우
              addr = data.roadAddress;
            } else {
              // 사용자가 지번 주소를 선택했을 경우(J)
              addr = data.jibunAddress;
            }

            // 사용자가 선택한 주소가 도로명 타입일때 참고항목을 조합한다.
            if (data.userSelectedType === "R") {
              // 법정동명이 있을 경우 추가한다. (법정리는 제외)
              // 법정동의 경우 마지막 문자가 "동/로/가"로 끝난다.
              if (data.bname !== "" && /[동|로|가]$/g.test(data.bname)) {
                extraAddr += data.bname;
              }
              // 건물명이 있고, 공동주택일 경우 추가한다.
              if (data.buildingName !== "" && data.apartment === "Y") {
                extraAddr +=
                  extraAddr !== ""
                    ? ", " + data.buildingName
                    : data.buildingName;
              }
              // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.
              if (extraAddr !== "") {
                extraAddr = " (" + extraAddr + ")";
              }
              // 조합된 참고항목을 해당 필드에 넣는다.
              document.getElementById("extraAddress").value = extraAddr;
            } else {
              document.getElementById("extraAddress").value = "";
            }

            // 우편번호와 주소 정보를 해당 필드에 넣는다.
            document.getElementById("postcode").value = data.zonecode;
            document.getElementById("address").value = addr;
            // 커서를 상세주소 필드로 이동한다.
            document.getElementById("detailAddress").focus();
          },
        }).open();
      };
    </script>
  </body>
</html>
