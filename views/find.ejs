<!DOCTYPE html>
<html lang="en">
  <head>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
  </head>
  <style>
    .changePage {
      display: flex;
    }
    .none {
      display: none !important;
    }

    /* 전체 페이지 중앙 정렬 */
    body {
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      background-color: #f8f9fa; /* 배경색 */
    }

    /* 찾기 박스 스타일 */
    .container {
      position: relative;
      width: 350px;
      padding: 40px;
      background: white;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
      border-radius: 8px;
      text-align: center;
    }

    /* 제목 스타일 */
    .container h2 {
      font-size: 22px;
      font-weight: bold;
      color: #71a12f;
      margin-bottom: 20px;
      padding-bottom: 10px;
    }

    /* 입력 필드 스타일 */
    input {
      width: 100%;
      height: 40px;
      font-size: 16px;
      padding: 5px;
      border: none; /* 테두리 제거 */
      border-bottom: 2px solid #ccc; /* 밑줄 추가 */
      background: transparent; /* 배경 투명 */
      outline: none; /* 기본 포커스 제거 */
      text-align: center; /* 텍스트 중앙 정렬 */
    }

    /* 포커스 시 효과 */
    input:focus {
      border-bottom: 2px solid #71a12f; /* 초록색 강조 */
    }

    /* 휴대폰 번호 입력 칸 스타일 */
    .input0 {
      width: 80px;
      text-align: center;
    }

    /* 버튼 스타일 */
    button {
      width: 100%;
      height: 40px;
      font-size: 16px;
      color: white;
      background-color: #71a12f;
      border: none;
      border-radius: 4px;
      margin-top: 15px;
      cursor: pointer;
    }

    /* 비밀번호 재설정 메시지 */
    #phoneMessage,
    .text1,
    .text {
      color: red;
      font-size: 12px;
      margin-top: 5px;
    }

    /* 페이지 변경 버튼 스타일 */
    .changePage {
      display: flex;
      justify-content: center;
      margin-top: 15px;
    }

    .changePage div {
      font-size: 14px;
      color: #71a12f;
      cursor: pointer;
      margin: 0 10px;
    }

    .changePage div:hover {
      text-decoration: underline;
    }
    .text2 {
      margin-bottom: 20px;
    }
    .text3 {
      margin-top: 20px;
    }
    .btn:disabled {
      background-color: #ccc !important; /* 연한 회색 */
      cursor: not-allowed !important; /* 클릭 불가 표시 */
      opacity: 0.5; /* 투명도 적용 */
    }
    .back-button {
      position: absolute;
      top: 20px;
      left: 20px;
      font-size: 24px;
      cursor: pointer;
      color: #333;
    }
    .back-button:hover {
      color: #71a12f;
    }
  </style>
  <body>
    <div class="container">
      <div class="back-button" onclick="goBack()">←</div>
      <h2 class="findIdPw">ID 찾기</h2>

      <!-- ID 찾기 -->
      <div class="findId">
        <div class="text2">가입 시 입력한 휴대폰 번호를 입력해주세요.</div>
        <div>
          <input
            type="tel"
            id="phone1"
            placeholder="010"
            class="input0"
            maxlength="3"
          />
          <input
            type="tel"
            id="phone2"
            placeholder="0000"
            class="input0"
            maxlength="4"
          />
          <input
            type="tel"
            id="phone3"
            placeholder="0000"
            class="input0"
            maxlength="4"
          />
        </div>
        <div id="phoneMessage"></div>
        <button onclick="idFind()">ID 찾기</button>
      </div>
      <div class="showId"></div>

      <!-- PW 찾기 -->
      <div class="findPw none">
        <div class="text2">가입 시 입력한 Email을 입력해주세요.</div>
        <input type="text" id="email" placeholder="abc123@XXX.com" />
        <button onclick="pwFind()">PW 찾기</button>
        <div class="showPw"></div>
      </div>

      <!-- PW 재설정 -->
      <div class="newPw none">
        <div class="text3">새 비밀번호</div>
        <input type="password" id="newPw" />
        <div class="text1"></div>
        <div class="text3">새 비밀번호 확인</div>
        <input type="password" id="checkPw" />
        <div class="text"></div>
        <div class="changePw"></div>
      </div>
    </div>
  </body>

  <script>
    const findIdPw = document.querySelector(".findIdPw");
    const findId = document.querySelector(".findId"); // id찾기 인풋
    const showId = document.querySelector(".showId");
    const num1 = document.getElementById("phone1");
    const num2 = document.getElementById("phone2");
    const num3 = document.getElementById("phone3");
    const showPw = document.querySelector(".showPw");
    const findPw = document.querySelector(".findPw"); //pw찾기 인풋
    const pw = document.getElementById("email");
    const newPw = document.querySelector(".newPw"); // 새비밀번호 인풋
    const changePw = document.querySelector(".changePw");
    //교환하는 비밀번호
    const updateNewPw = document.getElementById("newPw");
    const checkPw = document.getElementById("checkPw");
    const change = document.querySelector(".changePage");
    const changePage = (type) => {
      showId.innerHTML = "";
      newPw.classList.add("none");
      if (type === "id") {
        findIdPw.innerHTML = "ID 찾기";
        findId.classList.remove("none");
        findPw.classList.add("none");
      } else {
        findIdPw.innerHTML = "PW 찾기";
        findPw.classList.remove("none");
        findId.classList.add("none");
      }
    };
    window.onload = function () {
      const urlParams = new URLSearchParams(window.location.search);
      if (urlParams.has("id")) {
        changePage("id");
      } else if (urlParams.has("pw")) {
        changePage("pw");
      }
    };

    const idFind = () => {
      const number = `${num1.value}-${num2.value}-${num3.value}`;
      axios({
        method: "post",
        url: "/user/findId",
        data: { number: number },
      }).then((res) => {
        console.log(res.data.findId);
        if (!res.data.email) {
          showId.innerHTML = `<DIV class="text3">${res.data.message}</div>`;
        } else {
          findId.innerHTML = `<div class='text3'> ${res.data.name}님의 ID는</div><div class ='text3'>${res.data.email}입니다.</div>
          <br>
          <button onclick='login()'>로그인 페이지로 이동</button>`;
        }
      });
    };

    const pwFind = () => {
      const email = pw.value;
      axios({
        method: "post",
        url: "/user/findPw",
        data: { email: email },
      }).then((res) => {
        console.log(res.data);
        if (!res.data.data) {
          showPw.innerHTML = `${res.data.message}`;
          newPw.classList.add("none");
        } else {
          newPw.classList.remove("none");
          showPw.innerHTML = ``;
          changePw.innerHTML = `<button disabled class="btn" onclick="changeNewPw(${res.data.id})">비밀번호 변경</button>`;
        }
      });
    };
    let open1 = false;
    let open2 = false;
    const updatePw = () => {
      let open1 = false;
      let open2 = false;
      const pwValue = updateNewPw.value;
      const checkValue = checkPw.value;
      const btn = document.querySelector(".btn");

      const passRegex =
        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%^&*()_+={}\[\]:;"'.,<>?/-]).{8,}$/;

      if (pwValue === "") {
        document.querySelector(".text1").innerHTML =
          "비밀번호를 입력해 주세요.";
        open1 = false;
      } else if (!passRegex.test(pwValue)) {
        document.querySelector(".text1").innerHTML =
          "비밀번호는 최소 8자 이상, 대소문자, 숫자, 특수문자를 포함해야 합니다.";
        open1 = false;
      } else {
        document.querySelector(".text1").innerHTML = "";
        open1 = true;
      }
      if (pwValue !== checkValue) {
        document.querySelector(".text").innerHTML =
          "비밀번호와 똑같이 입력하세요";
        open2 = false;
      } else {
        document.querySelector(".text").innerHTML = "";
        open2 = true;
      }
      if (open1 && open2) {
        btn.disabled = false;
      } else {
        btn.disabled = true;
      }
    };
    updateNewPw.addEventListener("input", updatePw);
    checkPw.addEventListener("input", updatePw);

    const changeNewPw = (id) => {
      pwValue = updateNewPw.value;
      axios({
        method: "post",
        url: "/user/updatePw",
        data: { id: id, pw: pwValue },
      }).then((res) => {
        console.log(res.data);
        alert("비밀번호 변경 완료");
        window.location.href = "/login";
      });
    };
    const login = () => {
      window.location.href = "/login";
    };
    function goBack() {
      window.location.href = "/login";
    }
  </script>
</html>
